services:
    web:
      container_name: nginx
      image: nginx:1.27-alpine
      volumes:
        - ./nginx/:/etc/nginx/conf.d
      ports:
        - "80:80"
      depends_on:
        - api
      networks:
        - dts-test
  
    frontend:
      container_name: react-frontend
      build:
        context: ./client
        dockerfile: Dockerfile
      environment:
        - PORT=${TEST_REACT_PORT}
      ports:
        - "3000:${TEST_REACT_PORT}"
      depends_on:
        - api
      networks:
        - dts-test
  
    api:
      container_name: node-backend
      build:
        context: ./server
        dockerfile: Dockerfile
      environment:
        - PORT=${TEST_API_PORT}
        - TEST_POSTGRES_USER=${TEST_DB_USER}
        - TEST_POSTGRES_PASSWORD=${TEST_DB_PASSWORD}
        - TEST_POSTGRES_DB=${TEST_DB_NAME}
        - TEST_POSTGRES_HOST=${TEST_DB_HOST}
        - TEST_POSTGRES_PORT=${TEST_DB_PORT}
      ports:
        - "8080:${TEST_API_PORT}"
      depends_on:
        db_test:
          condition: service_healthy
      networks:
        - dts-test
  
    db_test:
      image: postgres:16.4
      container_name: ${TEST_DB_HOST}
      environment:
        - PGUSER=${TEST_DB_USER}
        - POSTGRES_USER=${TEST_DB_USER}
        - POSTGRES_PASSWORD=${TEST_DB_PASSWORD}
        - POSTGRES_DB=${TEST_DB_NAME}
        - POSTGRES_HOST=${TEST_DB_HOST}
      ports:
        - '4568:${TEST_DB_PORT}'
      volumes:
        - ./pg_data_test:/var/lib/postgresql/data
      networks:
        - dts-test
      healthcheck:
        test: "pg_isready -h db_test"
        interval: 5s
        timeout: 5s
        retries: 5

volumes:
  pg_data_test:
networks:
  dts-test:
    driver: bridge